name: Python CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-and-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest pytest-cov flake8
        
    - name: Lint with flake8
      run: |
        # Linting do código
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Verificação de complexidade e outros erros
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test with pytest
      run: |
        pytest --cov=app tests/
    
    - name: Build Docker image
      run: |
        # Criar um Dockerfile se não existir
        if [ ! -f Dockerfile ]; then
          echo "FROM python:3.10-slim" > Dockerfile
          echo "WORKDIR /app" >> Dockerfile
          echo "COPY . /app/" >> Dockerfile
          echo "RUN pip install -r requirements.txt" >> Dockerfile
          echo "CMD [\"python\", \"-m\", \"app.main\"]" >> Dockerfile
        fi
        
        # Construir a imagem Docker
        docker build -t minha-aplicacao:latest .
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'minha-aplicacao:latest'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'